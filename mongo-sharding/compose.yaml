version: '3'
services:

  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    networks:
      - app-network
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    ports:
      - "27018:27018"  # Оставляем публикацию портов для шардов
    networks:
      - app-network
    volumes:
      - shard1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    ports:
      - "27019:27019" # Оставляем публикацию портов для шардов
    networks:
      - app-network
    volumes:
      - shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      - app-network
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:27017", #передача данных сервера конфигурации
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

networks:
  app-network:
    driver: bridge  # Указываем driver: bridge, Docker сам разрулит сеть
volumes:
  config-data:
  shard1-data:
  shard2-data: